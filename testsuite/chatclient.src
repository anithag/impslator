
(# l1: log file location. Has erasure policy H /clear T  #)
l1: int_high~top,clear ref_low; 

(# l2: location for recv mesg #)
l2: string_high~top,cnd ref_low; 

(# l3: location for send mesg #)
l3: string_high~top,cnd ref_low; 

(# location for commands #)
l5: int_low ref_low;
l6: int_low ref_low;
l7: int_low ref_low;
l8: int_low ref_low;
l9: int_low ref_low;

(# Variables that read from locations #)
log: string_high~top,clear ref_low; 
exit : int_low ref_low;
join: int_low ref_low;
send: int_low ref_low;
receive: int_low ref_low;
erasechat:int_low ref_low;
clear:cond_low;
sendmsg: string_low;
recvmsg: string_low;
displaymsg: string_low


log := l1;
exit := l5;
join := l6;
receive := l7;
send := l8;
erasechat := l9;

(# Summary
 	1. Locations l5, l6, l7, l8 and l9 receive user commands.
	2. Continue polling if the user wants to exit
	3. Continue polling if the user has joined a channel. If so
	      Send and receive messages by writing to the log
	      If user selects erasechat then delete the chat log and quit the channel
#)
while (*exit) == 1 do

 while (*join) == 1 do
	
	if (*receive) == 1 then
		recvmsg := (*l2);
		log <- recvmsg;
		displaymsg := "received";
		output(L, displaymsg);
		recvmsg := "0";
		receive <- 0;
	else
	  if (*send) == 1 then
		sendmsg := (*l3);
		log <- sendmsg;
		output(L, sendmsg);
		sendmsg := "0";
		send <- 0;
	  else 
	    if (*erasechat) == 1 then
		log <- "0";
		set(clear);
		join <- 0;
	    else
		skip;
	    fi;
	fi;
      fi;
 end;
 log := l9;
end;
displaymsg := "Bye";
output(L, displaymsg);
