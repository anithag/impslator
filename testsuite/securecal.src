(# Case study to illustrate TCB minimization #)

l1: (string_low [5])_low ref_low;
l2: string_low ref_low;
l3: string_low ref_low;
l4: string_low ref_low;
l5: string_low ref_low;
l6: string_low ref_low;

l7: (int_high [2])_high ref_low;
l8: int_high ref_low;
l9: int_high ref_low;

ops: (string_low [5])_low;
numops: int_low;
op1: int_low;
op2: int_low;
idx: int_low;
stop: int_low

l1 <- (l2, l3, l4, l5, l6);
l7 <- (l8, l9);

ops := (*l1);
numops := 5;
idx:=0;
while idx < numops do
	if (*ops[idx]) == "add" then 
		op1 := (*l7)[stop-1];
		op2 := (*l7)[stop];
		(*l7)[stop-1] <- (*op1) + (*op2);
		stop := stop - 1;
		output(H, (*op1));
		op1 := 0;
		op2 := 0;
		
	else
		if (*ops[idx]) == "times" then 
			op1 := (*l7)[stop-1];
			op2 := (*l7)[stop];
			(*l7)[stop-1] <- (*op1) + (*op2);
			stop := stop - 1;
			output(H, (*op1));
			op1 := 0;
			op2 := 0;
		else
			if (*ops[idx]) == "modulo" then 
				op1 := (*l7)[stop-1];
				op2 := (*l7)[stop];
				(*l7)[stop-1] <- (*op1) + (*op2);
				stop := stop - 1;
				output(H, (*op1));
				op1 := 0;
				op2 := 0;
			else
				skip;
			fi;
		fi;
	fi;
	idx:= idx+1;
end;

